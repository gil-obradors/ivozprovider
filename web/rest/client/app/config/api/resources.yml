########################################
## Custom models
########################################

Model\Token:
  itemOperations: []
  collectionOperations:
    post_auth_token_exchange:
      method: 'POST'
      path: '/token/exchange'
      route_name: 'post_auth_token_exchange'
      swagger_context:
        consumes:
        - 'application/x-www-form-urlencoded'
        produces:
        - 'application/json'
        tags:
        - Auth
        parameters:
        - name: token
          in: formData
          type: string
          required: true
          description: 'Brand admin token'
        - name: username
          in: formData
          type: string
          required: true
          description: 'Target client admin user name'

Model\WebTheme:
  itemOperations:
    get:
      method: 'GET'
      path: '/my/web_theme'
      route_name: 'get_my_web_theme'
      swagger_context:
        tags:
          - My
        parameters: []
  collectionOperations: {}


Model\RatingPlanPrices:
  attributes:
    access_control: '"ROLE_COMPANY_ADMIN" in roles'
    pagination_enabled: false
  itemOperations: []
  collectionOperations:
    get_my_rating_plan_prices:
      method: 'GET'
      path: '/rating_plan_groups/{id}/prices'
      route_name: 'get_my_rating_plan_prices'
      swagger_context:
        produces:
        - 'text/csv'
        tags:
        - Provider
        parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: 'Rating plan group Id'

Model\UserStatus:
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
  itemOperations:
    get:
      method: 'GET'
      path: '/my/status'
      route_name: 'get_my_status'
      swagger_context:
        tags:
          - My
        parameters: []
  collectionOperations: {}

Model\CallStats:
  attributes:
    access_control: '"ROLE_COMPANY_USER" in roles'
  itemOperations:
    get:
      method: 'GET'
      path: '/my/call_stats'
      route_name: 'get_my_call_stats'
      swagger_context:
        tags:
          - My
        parameters: []
  collectionOperations: {}
